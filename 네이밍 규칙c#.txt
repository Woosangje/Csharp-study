클래스, 열거형, 이벤트, 메서드 등의 이름을 만들 때에는 대문자로 시작하는 변수명을 사용한다.
복합어일 경우 중간에 시작하는 새로운 단어는 대문자로 적는다.
예)MainFrame

CamelCasing(카멜 케이싱)
메서드의 매개변수의 이름에 적용되는데 첫 번째 문자는 소문자로 시작하고 복합어일 경우
파스칼 케이싱과 동일하게 적용한다.
동일한 이름을 가지는 두 항목을 구분하는 용도로 사용한다.
예)utilityBox, mainFrame

첫글자 g는 전역변수, m은 멤버변수를 의미한다. 전역이나 멤버변수의 경우에는 그 다음에_ 를 적는다.

n과i는 자연수를 뜻하며 i는 주로 인덱스에 사용하고, n은 카운트의 목적에 주로 사용한다.

변수
일반적인 변수(i,j,tmp)는 그때 상황에 맞게 사용(남발하지 말기)
첫단어는 소문자로 새로운 단어의 시작은 대문자(priceSum)
정수(int, long)는 preifx가 없다(int 와 long 구분에 신경쓰기)
실수(float, double)는 f,d 로 시작한다.
예)float fPriceSum, dobule dPriceSum

unsigned 형이면 정수, 실수 상관없 u 가 붙는다.
예)int uPriceSum, long uPriceSum, float fUPriceSum, double dUPrice

우선순위는 f = d > u
문자형 변수는 ch로 시작한다.
문자형 변수 ch로 시작한다.
예)char ch, char chInput, char chOutput

배열은 arr로 시작한다.
예)int arrPriceSum[10], char arrAuthorName[10]

포인터는 ptr로 시작한다.
예)int * ptrPriceNum, char, char *ptrAuthorName

외부변수는 g 로 시작한다
예)unsigned int gUPriceNum, char *gPtrAuthorName, char gArrAuthorName[10]

정적변수는 st 로 시작하다
예)float stFPriceNum, char * stPtrAuthorName

정적외부변수는 gst 로 시작한다
예)unsigned double gstDUPriceNum, char * gstPtrAuthorName[10]

구조체 인스턴스변수는 stru 로 시작한다.
예)SPerson struPerson, SPerson *ptrStuPerson

함수
동사 + 목적어이고 완전한 단어를 사용한다.
동사는 소문자이고 목적어의 시작은 대문자, 목적어 새로운 단어의 시작도 대문자
예)char *makeLinkedList(...){...{

구조체
구조체명은 _S 로 시작하고 단어의 시작은 대문자, 새로운 단어의 시작도 대문자
typedef 로 재정의 할때는 _ 만 없앤다.

