7.6 this 키워드
this는 객체가 자신을 지칭할 때 사용하는 키워드입니다.
이게 무슨 말인고 하니, 객체 외부에서는 객체의 필드나 메소드에 접근할 때 
객체의 이름(변수 또는 식별자)을 사용한다면,
객체 내부에서는 자신의 필드나 메소드에 접근할 때 this 키워드를 사용한다는 것입니다.

7.12 오버라이딩 봉인하기
클래스를 (상속이 안 되도록) 봉인하는 것처럼 메소드도 (오버라이딩되지 않도록) 봉인할 수 있습니다.
그렇다고 모든 메소드를 봉인할 수 있는 것은 아니고,
virtual로 선언된 가상 메소드를 오버라이딩한 버전의 메소드만이 가능합니다.
예를 들어 다음과 같이 Base 클래스와 Derived 클래스가 있다고 하면, Derived의 SealMe()만 봉인할 수 있습니다.

7.15 확장 메소드
확장 메소드(Extension Method)는 기존 클래스의 기능을 확장하는 기법입니다.
기반 클래스를 물려받아 파생 클래스를 만든 뒤 여기에 필드나 메소드를 추가하는 상속과는 다릅니다.
다시 한번 이야기하지만, 확장 메소드는 "기존 클래스"의 기능을 확장합니다. 
확장 메소드를 이용하면 string 클래스에 문자열을 뒤집는 기능을 넣을 수도 있고,
int 형식에 제곱 연산 기능을 넣을 수도 있습니다.
확장 메소드를 선언하는 방법은 다음과 같습니다.
메소드를 선언하되, static 한정자로 수식해야 합니다.
그리고 이 메소드의 첫 번째 매개 변수는 반드시 this 키워드와 함께 확장하고자 하는 클래스(형식)의
인스턴스여야 합니다.
그 뒤에 따라오는 매개 변수 목록이 실제로 확장 메소드를 호출할 때 입력되는 매개 변수입니다.
메소드는 클래스 없이 선언될 수 없지요?
따라서 클래스를 하나 선언하고 그 안에 확장 메소드를 선언합니다.
이 때 선언하는 클래스도 역시 static 한정자로 수식해야 합니다.